Hi all,

不好意思，因為題目設計上有些問題，我對作業內容進行一些更新。(請見附件)
這個更新不會需要你們大改架構，主要是針對昨天討論的部分，對特定內容定義的更清楚。


1. User Data Structure
我新增了active欄位，用來判斷該user是否被刪除

2. About create new user

2.1 新產生的user_id = 目前資料內最後一個user_id +1
舉例來說，目前有兩筆資料，新增第三筆資料後user_id = 2+1 = 3

2.2 判斷user 是否已經存在，若active user 內，有一樣的username，則視為user已經存在

user = {
    1:{"name":"Wanyu_Lee",
       "email":Wanyu_Lee@pegatroncorp.com,
       "active": true
},
    2:{"name":"Sandy1_Zeng",
       "email":Sandy1_Zeng@pegatroncorp.com,
　　　　"active": false
　　 }
}

舉例來說，若目前我的user structure如上，我想再新增一筆，name = Wanyu_Lee的，會被視為user已經存在
同理，若想新增name = Sandy1_Zeng的資料，是可以的，因為該user 已經是non-active

3. About GET/PUT/DELETE /user/{user_id}

這部分應該是昨天討論時比較有爭議的部分

FastAPI 把上面這種/user/{user_id} API query的方式叫做 Path Parameter (https://fastapi.tiangolo.com/tutorial/path-params/)
這種設計會透過預先定義好的「位置」來接受參數，也就是說{user_id} 一定要存在，API才會生效

另一種寫法叫Query Parameter (https://fastapi.tiangolo.com/tutorial/query-params/)
是用來接受URL的參數，與上面的用法的差異在於Query Parameter沒有預先定義位置
所以query 方式會變成 /user?user_id=XXX
就是Jimmy與Britney的另一個寫法，這種寫法就可以判斷user_id 是否為None了

為了統一設計，我們還是維持 /user/{user_id}
不過改成判斷，{user_id} 是否為int
這個部分主要是想讓大家練習，當我們輸入不對的資料型態或是query錯parameter，API 會回復400 給我們

最後補充說明一下，為什麼原本query  GET /user 會跳405
是因為我提供的spec中已經有一個 POST /user
所以當用GET去query的時候，API server會覺得你用錯query method了
這邊是我設計比較不好的部分，造成大家的疑惑，不好意思！

這次的作業讓大家交到下周二
如果有其他問題，或是發現哪邊有些bug，歡迎再來找我討論！
謝謝

Sincerely,
李莞瑜 | Wanyu Lee



This e-mail and its attachment may contain information that is confidential or privileged, and are solely for the use of the individual to whom this e-mail is addressed. If you are not the intended recipient or have received it accidentally, please immediately notify the sender by reply e-mail and destroy all copies of this email and its attachment. Please be advised that any unauthorized use, disclosure, distribution or copying of this email or its attachment is strictly prohibited. 
本電子郵件及其附件可能含有機密或依法受特殊管制之資訊，僅供本電子郵件之受文者使用。台端如非本電子郵件之受文者或誤收本電子郵件，請立即回覆郵件通知寄件人，並銷毀本電子郵件之所有複本及附件。任何未經授權而使用、揭露、散佈或複製本電子郵件或其附件之行為，皆嚴格禁止 。

